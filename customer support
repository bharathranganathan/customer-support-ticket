# Importing necessary libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import classification_report

# Sample dataset containing support tickets and their categories
data = {
    'ticket_text': [
        "I'm experiencing issues with my internet connection.",
        "I have a question about my recent bill.",
        "The product I received is damaged.",
        "I want to provide some feedback about your service.",
        "I need help setting up my account.",
        "I'm unable to log in to my account.",
        "I want to cancel my subscription.",
        "How do I update my payment information?",
        "The website is not loading properly.",
        "I'm having trouble accessing certain features."
    ],
    'category': [
        'technical_issues',
        'billing_inquiries',
        'product_issues',
        'general_feedback',
        'account_setup',
        'account_login_issues',
        'subscription_cancellation',
        'payment_related',
        'website_issues',
        'feature_accessibility'
    ]
}

# Creating a DataFrame from the sample dataset
df = pd.DataFrame(data)

# Splitting the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(df['ticket_text'], df['category'], test_size=0.2, random_state=42)

# Vectorizing the ticket text using TF-IDF
tfidf_vectorizer = TfidfVectorizer(stop_words='english')
X_train_tfidf = tfidf_vectorizer.fit_transform(X_train)
X_test_tfidf = tfidf_vectorizer.transform(X_test)

# Training a Multinomial Naive Bayes classifier
classifier = MultinomialNB()
classifier.fit(X_train_tfidf, y_train)

# Predicting categories for test data
y_pred = classifier.predict(X_test_tfidf)

# Evaluating the classifier
print(classification_report(y_test, y_pred))
